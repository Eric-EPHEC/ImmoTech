@page "/external-callback"

@using Microsoft.AspNetCore.WebUtilities
@inject NavigationManager Nav
@inject Immotech.Front.Services.AuthService Auth
@inject Blazored.Toast.Services.IToastService Toast

<div class="container mx-auto">
    <p>Finalisation de la connexion...</p>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        // We parse the query string from the URL to find the token or an error.
        var uri = Nav.ToAbsoluteUri(Nav.Uri);
        var query = QueryHelpers.ParseQuery(uri.Query);

        if (query.TryGetValue("token", out var token))
        {
            // If a token is present, the login was successful.
            // We use the AuthService to store the token and notify the application.
            await Auth.OnLoginAsync(token!);
            Toast.ShowSuccess("Connecté avec succès.");
            Nav.NavigateTo("/");
        }
        else if (query.TryGetValue("error", out var error))
        {
            // If an error is present, we display it to the user.
            Toast.ShowError($"Erreur de connexion externe: {error}");
            Nav.NavigateTo("/login");
        }
        else
        {
            // If neither a token nor an error is present, something went wrong.
            Toast.ShowError("Une erreur inattendue est survenue lors de la connexion externe.");
            Nav.NavigateTo("/login");
        }
    }
} 